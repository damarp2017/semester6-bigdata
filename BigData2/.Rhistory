karyawan = read.csv('chapter3/employees.csv', header = TRUE)
View(karyawan)
View(karyawan)
gaji = read.csv('chapter3/salaries.csv', header = true)
gaji = read.csv('chapter3/salaries.csv', header = TRUE)
cls
clr
clc
clear
penduduk_pekerjaan = read.csv('jumlah-penduduk-menurut-bidang-pekerjaan-utama.csv', header = TRUE)
install.packages("xlsx")
library(xlsx)
data_pesanan = read.xlsx('Sample - Superstore.xls', sheetIndex = 1, startRow = 1)
View(penduduk_pekerjaan)
View(penduduk_pekerjaan)
View(data_pesanan)
View(data_pesanan)
filter_16090137 = data_pesanan[,c("Row.ID", "Order.Date", "Customer.Name")]
View(filter_16090137)
View(filter_16090137)
write.xlsx(filter_16090137, file = "filter_16090137.xlsx")
url_kompas = "https://indeks.kompas.com/"
page_kompas = read_html(url_kompas)
install.packages("rvest")
library(rvest)
library(rvest)
page_kompas = read_html(url_kompas)
View(page_kompas)
waktu = html_nodes(page_kompas, ".article__date")
View(waktu)
Waktu = html_text(Waktu)
Waktu = html_text(waktu)
judul = html_nodes(page_kompas, ".article__link")
Judul = html_text(judul)
data.frame(Judul, Waktu)
list_berita = cbind(Judul, Waktu)
View(list_berita)
View(karyawan)
View(karyawan)
View(gaji)
View(gaji)
install.packages("purrr")
url_kompas = "https://news.kompas.com/search/2019-03-20"
library(purrr)
library(purrr)
berita_kompas = map_df(1:4, function(i){})
berita_kompas = map_df(1:4, function(i){})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul,Waktu)
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))data.frame(Judul,Waktu)})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul,Waktu)
})
berita_kompas = map_df(1:4, function(i){page = read_html(sprintf(url_kompas, i)),data.frame(Judul,Waktu)})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul,Waktu)
})
karyawan = read.csv('chapter3/employees.csv', header = TRUE)
gaji2 = read.csv('chapter3/salaries.csv', header = TRUE)
View(gaji2)
View(gaji2)
gaji = read.csv('chapter3/salaries.csv', header = TRUE)
View(gaji2)
gaji = read.csv('chapter3/salaries.csv', header = TRUE)
penduduk_pekerjaan = read.csv('jumlah-penduduk-menurut-bidang-pekerjaan-utama.csv', header = TRUE)
View(penduduk_pekerjaan)
View(penduduk_pekerjaan)
install.packages("xlsx")
library(xlsx)
data_pesanan = read.xlsx('Sample - Superstore.xls', sheetIndex = 1, startRow = 1)
karyawan = read.csv('chapter3/employees.csv', header = TRUE)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
data_pesanan = read.xlsx('Sample - Superstore.xls', sheetIndex = 1, startRow = 1)
filter_16090137 = data_pesanan[,c("Row.ID", "Order.Date", "Customer.Name")]
write.xlsx(filter_16090137, file = "filter_16090137.xlsx")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
clr
cls
clc
library(dplyr)
url_kompas = "https://news.kompas.com/search/2019-03-20"
page_kompas = read_html(url_kompas)
library(rvest)
page_kompas = read_html(url_kompas)
waktu = html_nodes(page_kompas, ".article__date")
Waktu = html_text(Waktu)
Waktu = html_text(waktu)
judul = html_nodes(page_kompas, ".article__link")
Judul = html_text(judul)
install.packages("purrr")
install.packages("purrr")
library(purrr)
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
library(rvest)
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
berita_kompas = map_df(1:2, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
berita_kompas = map_df(1:2, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
berita_kompas = map_df(1:2, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article_link")), Waktu=html_text(html_nodes(page, "article_date")))
})
View(berita_kompas)
View(berita_kompas)
berita_kompas = map_df(1:2, function(i){
berita_kompas = map_df(1:2, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, "article__date")))
})
berita_kompas = map_df(1:2, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
;
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
library(dplyr)
library(rvest)
library(purrr)
url_kompas = "https://news.kompas.com/search/2019-03-20"
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
berita_kompas = map_df(1:4, function(i){
page = read_html(sprintf(url_kompas, i))
data.frame(Judul=html_text(html_nodes(page, ".article__link")), Waktu=html_text(html_nodes(page, ".article__date")))
})
View(berita_kompas)
View(berita_kompas)
View(filter_16090137)
View(filter_16090137)
View(berita_kompas)
names(karyawan)
View(karyawan)
View(karyawan)
View(gaji)
View(gaji)
names(gaji)
names(karyawan) = c("ID", "Tanggal Lahir", "Nama Depan", "Nama Belakang", "Jenis Kelamin", "Tanggal Mulai Kerja")
colnames(gaji) = c("ID", "Gaji", "Mulai Kerja", "Akhir Kerja")
str(karyawan)
karyawan$`Tanggal Lahir` = as.Date(karyawan$`Tanggal Lahir`)
karyawan$`Tanggal Mulai Kerja` = as.Date(karyawan$`Tanggal Mulai Kerja`)
karyawan$`Nama Depan` = as.character(karyawan$`Nama Depan`)
karyawan$`Nama Belakang` = as.character(karyawan$`Nama Belakang`)
str(karyawan)
karyawan$`Jenis Kelamin` = as.character(karyawan$`Jenis Kelamin`)
str(gaji)
gaji$`Mulai Kerja` = as.Date(gaji$`Mulai Kerja`)
gaji$`Akhir Kerja` = as.Date(gaji$`Akhir Kerja`)
str(gaji)
karyawan$`Tanggal Mulai Kerja`+30
karyawan$`Tanggal Mulai Kerja` - karyawan$`Tanggal Lahir`
difftime(karyawan$`Tanggal Mulai Kerja`, karyawan$`Tanggal Lahir`, units = "weeks")
install.packages("lubridate")
library(lubridate)
time_tahun = interval(ymd(karyawan$`Tanggal Lahir`), ymd(karyawan$`Tanggal Mulai Kerja`))
time_tahun = as.period(time_tahun)
year(time_tahun)
now()
usia = interval(ymd(karyawan$`Tanggal Lahir`), now())
usia = as.period(usia)
year(usia)
karyawan = rbind(karyawan, c(10011, "1990-06-28", "Budi", "Santoso", "M", "2019-01-01"))
karyawan = cbind(karyawan, Posisi = NA)
waktu = interval(ymd(karyawan$`Tanggal Lahir`), now())
waktu = as.period(waktu)
karyawan = cbind(karyawan, Usia=year(waktu))
head(karyawan, 3)
tail(karyawan, 4)
karyawan[1:3,]
karyawan[4:6,]
karyawan[2:5, 2:4]
karyawan[c(2,5), c(1,3)]
karyawan[1:3, c("ID", "Nama Depan")]
karyawan[,-8]
karyawan[-1,]
karyawan[karyawan$`Jenis Kelamin` == 'M',]
gaji[gaji$Gaji >= 60000 & gaji$Gaji < 70000, ]
karyawan[substr(karyawan$`Nama Depan`,0,2)=="Ge",]
karyawan[substr(karyawan$`Nama Depan`,0,2)=="Be",]
karyawan$'Nama Karyawan' = paste(karyawan$`Nama Depan`, karyawan$`Nama Belakang`)
karyawan_gaji = merge(karyawan, gaji, by="ID")
View(karyawan_gaji)
View(karyawan_gaji)
a = c(5,1,4,3,2,6,3)
sort(a)
sort(a, decreasing = TRUE)
order(a)
order(a, decreasing = TRUE)
sortir_gaji = gaji[order(gaji$Gaji, decreasing = TRUE),]
View(sortir_gaji)
View(sortir_gaji)
sortir_gaji2 = gaji[order(gaji$Gaji, gaji$`Mulai Kerja`, decreasing = TRUE),]
View(sortir_gaji2)
View(sortir_gaji2)
install.packages("reshape2")
library(reshape2)
install.packages("reshape2")
library(reshape2)
library(reshape2)
gaji_pertahun = dcast(gaji, ID ~ year(ymd(`Mulai Kerja`)), value.var = "Gaji")
View(gaji_pertahun)
View(gaji_pertahun)
gaji_pertahun2 = dcast(karyawan_gaji, ID + 'Nama Karyawan' ~ year(ymd(`Mulai Kerja`)), value.var = "Gaji")
balik_gajiPertahun = melt(gaji_pertahun, id.vars = c("ID"), variable.name = "Tahun Mulai Kerja", value.name = "Gaji")
balik_gajiPertahun_noNA = na.omit(balik_gajiPertahun)
View(balik_gajiPertahun_noNA)
View(balik_gajiPertahun_noNA)
View(balik_gajiPertahun)
View(balik_gajiPertahun)
gaji[gaji$`Akhir Kerja` > "2100-01-01",]
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
is.na(gaji$`Akhir Kerja`)
sum(is.na(gaji$`Akhir Kerja`))
sum(is.na(gaji$`Akhir Kerja`))/length(gaji$`Akhir Kerja`)
gaji_pertahun = dcast(gaji, ID ~ year(ymd(`Mulai Kerja`)), value.var = "Gaji")
sum(is.na(gaji$`Akhir Kerja`))/length(gaji$`Akhir Kerja`)
karyawan$`Jenis Kelamin` = as.factor(karyawan$`Jenis Kelamin`)
str(karyawan)
karyawan$`Tanggal Mulai Kerja` - karyawan$`Tanggal Lahir`
difftime(karyawan$`Tanggal Mulai Kerja`, karyawan$`Tanggal Lahir`, units = "weeks")
karyawan = cbind(karyawan, Usia=year(waktu))
View(karyawan)
View(karyawan)
waktu = interval(ymd(karyawan$`Tanggal Lahir`), now())
waktu = as.period(waktu)
View(sortir_gaji)
View(sortir_gaji)
gaji[gaji$`Akhir Kerja` > "2100-01-01",]
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
gaji[gaji$`Akhir Kerja` > "2100-01-01",]
is.na(gaji$`Akhir Kerja`)
sum(is.na(gaji$`Akhir Kerja`))
sum(is.na(gaji$`Akhir Kerja`))/length(gaji$`Akhir Kerja`)
View(gaji)
View(gaji)
is.na(gaji$`Akhir Kerja`)
sum(is.na(gaji$`Akhir Kerja`))
sum(is.na(gaji$`Akhir Kerja`))/length(gaji$`Akhir Kerja`)
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
gaji[gaji$`Akhir Kerja` > "2100-01-01",]
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = 0
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = "0"
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
gaji[gaji$`Akhir Kerja` > "2100-01-01",]
gaji[gaji$`Akhir Kerja` > "2100-01-01", "Akhir Kerja"] = NA
is.na(gaji$`Akhir Kerja`)
View(gaji)
